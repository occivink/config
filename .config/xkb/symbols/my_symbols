xkb_symbols "my_symbols" {

    name[group1]="main";
    key.type = "FOUR_LEVEL";

    key <AE01> {         [               1,          exclam ] };
    key <AE02> {         [               2,              at ] };
    key <AE03> {         [               3,      numbersign ] };
    key <AE04> {         [               4,          dollar ] };
    key <AE05> {         [               5,         percent ] };
    key <AE06> {         [               6,     asciicircum ] };
    key <AE07> {         [               7,       ampersand ] };
    key <AE08> {         [               8,        asterisk ] };
    key <AE09> {         [               9,       parenleft ] };
    key <AE10> {         [               0,      parenright ] };
    key <AE11> {         [           minus,      underscore ] };
    key <AE12> {         [           equal,            plus ] };
    key <BKSP> {         [       BackSpace,       BackSpace ] };
    key  <TAB> {         [             Tab,    ISO_Left_Tab ] };
    key <AD01> {         [               q,               Q, dead_acute ] };
    key <AD02> {         [               w,               W, dead_circumflex ] };
    key <AD03> {         [               e,               E, dead_grave ] };
    key <AD04> {         [               r,               R, dead_cedilla ] };
    key <AD05> {         [               t,               T, dead_diaeresis ] };
    key <AD06> {         [               y,               Y ] };
    key <AD07> {         [               u,               U ] };
    key <AD08> {         [               i,               I ] };
    key <AD09> {         [               o,               O ] };
    key <AD10> {         [               p,               P ] };
    key <AD11> {         [     bracketleft,       braceleft ] };
    key <AD12> {         [    bracketright,      braceright ] };
    key <AC01> {         [               a,               A, dead_breve ] };
    key <AC02> {         [               s,               S, dead_belowcomma ] };
    key <AC03> {         [               d,               D, dead_tilde ] };
    key <AC04> {         [               f,               F ] };
    key <AC05> {         [               g,               G ] };
    key <AC06> {         [               h,               H ] };
    key <AC07> {         [               j,               J ] };
    key <AC08> {         [               k,               K ] };
    key <AC09> {         [               l,               L ] };
    key <AC10> {         [       semicolon,           colon ] };
    key <AC11> {         [      apostrophe,        quotedbl ] };
    key <TLDE> {         [           grave,      asciitilde ] };
    key <BKSL> {         [       backslash,             bar ] };
    key <AB01> {         [               z,               Z ] };
    key <AB02> {         [               x,               X ] };
    key <AB03> {         [               c,               C ] };
    key <AB04> {         [               v,               V ] };
    key <AB05> {         [               b,               B ] };
    key <AB06> {         [               n,               N ] };
    key <AB07> {         [               m,               M ] };
    key <AB08> {         [           comma,            less ] };
    key <AB09> {         [          period,         greater ] };
    key <AB10> {         [           slash,        question ] };
    
    key <FK01> { type= "CTRL+ALT", symbols[Group1]= [              F1, XF86Switch_VT_1 ] };
    key <FK02> { type= "CTRL+ALT", symbols[Group1]= [              F2, XF86Switch_VT_2 ] };
    key <FK03> { type= "CTRL+ALT", symbols[Group1]= [              F3, XF86Switch_VT_3 ] };
    key <FK04> { type= "CTRL+ALT", symbols[Group1]= [              F4, XF86Switch_VT_4 ] };
    key <FK05> { type= "CTRL+ALT", symbols[Group1]= [              F5, XF86Switch_VT_5 ] };
    key <FK06> { type= "CTRL+ALT", symbols[Group1]= [              F6, XF86Switch_VT_6 ] };
    key <FK07> { type= "CTRL+ALT", symbols[Group1]= [              F7, XF86Switch_VT_7 ] };
    key <FK08> { type= "CTRL+ALT", symbols[Group1]= [              F8, XF86Switch_VT_8 ] };
    key <FK09> { type= "CTRL+ALT", symbols[Group1]= [              F9, XF86Switch_VT_9 ] };
    key <FK10> { type= "CTRL+ALT", symbols[Group1]= [             F10, XF86Switch_VT_10 ] };
    key <FK11> { type= "CTRL+ALT", symbols[Group1]= [             F11, XF86Switch_VT_11 ] };
    key <FK12> { type= "CTRL+ALT", symbols[Group1]= [             F12, XF86Switch_VT_12 ] };

    key <RTRN> {  type="ONE_LEVEL", symbols[Group1] = [          Return ] };
    key <SPCE> {  type="ONE_LEVEL", symbols[Group1] = [           space ] };
    key <CAPS> {  type="ONE_LEVEL", symbols[Group1] = [          Escape ] };

    key <HOME> {  type="ONE_LEVEL", symbols[Group1] = [            Home ] };
    key  <END> {  type="ONE_LEVEL", symbols[Group1] = [             End ] };

    key <PGUP> {  type="ONE_LEVEL", symbols[Group1] = [           Prior ] };
    key <PGDN> {  type="ONE_LEVEL", symbols[Group1] = [            Next ] };

    key  <INS> {  type="ONE_LEVEL", symbols[Group1] = [          Insert ] };
    key <DELE> {  type="ONE_LEVEL", symbols[Group1] = [          Delete ] };

    key   <UP> {  type="ONE_LEVEL", symbols[Group1] = [              Up ] };
    key <DOWN> {  type="ONE_LEVEL", symbols[Group1] = [            Down ] };
    key <LEFT> {  type="ONE_LEVEL", symbols[Group1] = [            Left ] };
    key <RGHT> {  type="ONE_LEVEL", symbols[Group1] = [           Right ] };

    key <MUTE> {  type="ONE_LEVEL", symbols[Group1] =[   XF86AudioMute ] };
    key <VOL-> {  type="ONE_LEVEL", symbols[Group1] =[ XF86AudioLowerVolume ] };
    key <VOL+> {  type="ONE_LEVEL", symbols[Group1] =[ XF86AudioRaiseVolume ] };
    key <POWR> {  type="ONE_LEVEL", symbols[Group1] =[    XF86PowerOff ] };

    key <LFSH> {  type="ONE_LEVEL", symbols[Group1] = [         Shift_L ] };
    key <RTSH> {  type="ONE_LEVEL", symbols[Group1] = [         Shift_R ] };

    key <LCTL> {  type="ONE_LEVEL", symbols[Group1] = [       Control_L ] };
    key <RCTL> {  type="ONE_LEVEL", symbols[Group1] = [       Control_R ] };

    key <LALT> {  type="ONE_LEVEL", symbols[Group1] = [           Alt_L ] };
    key <RALT> {  type="ONE_LEVEL", symbols[Group1] = [           Alt_R ] };

    key <LWIN> {  type="ONE_LEVEL", symbols[Group1] = [         Super_L ] };
    key <RWIN> {  type="ONE_LEVEL", symbols[Group1] = [         Super_R ] };

    modifier_map Shift { Shift_L, Shift_R };
    modifier_map Control { Control_L, Control_R };

    modifier_map Mod1 { Alt_L };
    modifier_map Mod3 { Alt_R };
    modifier_map Mod4 { Super_L, Super_R };
    modifier_map Mod5 { Meta_R, Meta_L };
};
